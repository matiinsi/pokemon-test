import Head from "next/head";
import {
  Container,
  Stack,
  Button,
  SimpleGrid,
  Flex,
  Box,
  Modal,
  ModalOverlay,
  ModalHeader,
  ModalBody,
  ModalContent,
  ModalCloseButton,
  useDisclosure,
  Spinner,
} from "@chakra-ui/react";
import PokemonCard from "@/components/PokemonCard";
import PokemonData from "@/components/PokemonData";
import usePokemon from "@/hooks/usePokemon";
import { ToastContainer } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css';
import FiltersButtons from "@/components/FiltersButtons";
import Header from "@/components/Header";


export default function Home() {
  const pokemonDataModal = useDisclosure();

  const {isLoading, pokemon, selectedPokemon, setSelectedPokemon, setOffset, setType, type} = usePokemon();

  const handleNextPage = (event) => {
    event.preventDefault();
    setOffset((prev) => prev + 20);
  }

  const handleViewPokemon = (pokemon) => {
    setSelectedPokemon(pokemon);
    pokemonDataModal.onOpen();
  }

  const handleFilterPokemon = (type) => {
    setType(type);
  };

  return (
    <>
      <ToastContainer />
      <Header />
      <Head>
        <title>Pokemon Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <FiltersButtons handleFilterPokemon={handleFilterPokemon} />

      <Flex alignItems="center" minH="100vh" justifyContent="center">
        <Container maxW="container.lg">
          <Stack p="5" alignItems="center" spacing="5">
            {isLoading ? (
              <Spinner />
            ) : (
              <>
                <SimpleGrid spacing="5" columns={{ base: 2, md: 5 }}>
                  {pokemon?.map((pokemon) => (
                    <Box
                      as="button"
                      key={`${pokemon.id}-${pokemon.name}`}
                      onClick={() => handleViewPokemon(pokemon)}
                    >
                      <PokemonCard pokemon={pokemon} />
                    </Box>
                  ))}
                </SimpleGrid>
                {type === "all" && (
                  <Button 
                    isLoading={isLoading} 
                    onClick={handleNextPage} 
                  >
                    Cargas m√°s
                  </Button>
                )}
              </>
            )}

          </Stack>
        </Container>
      </Flex>
      <Modal {...pokemonDataModal}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader textTransform="capitalize">
            {selectedPokemon?.name}
          </ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            {selectedPokemon && <PokemonData pokemon={selectedPokemon} />}
          </ModalBody>
        </ModalContent>
      </Modal>
    </>
  );
}
